local monarch = require "monarch.monarch"

function init(self)
    msg.post(".", "acquire_input_focus")
    msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })
    local hand_1 = gui.get_node('split_hand_1_count')
    local hand_2 = gui.get_node('split_hand_2_count')
    gui.set_enabled(hand_1, false)
    gui.set_enabled(hand_2, false)
    gui.set_enabled(gui.get_node('borrow_money'), false)

    self.chip_selected = 1
    self.bet = 0
end

function on_message(self, message_id, message, sender)
    if message_id == hash('disable_outcome') then
        local node = gui.get_node('outcome')
        gui.set_enabled(node, false)
    elseif message_id == hash('enable_outcome') then
        local node = gui.get_node('outcome')
        gui.set_enabled(node, true)
        gui.set_text(node, message.text)
    elseif message_id == hash('enable_split_outcomes') then
        if message.hand == 1 then
            local node = gui.get_node('split_hand_1_outcome')
            gui.set_enabled(node, true)
            gui.set_text(node, message.text)
        elseif message.hand == 2 then
            local node = gui.get_node('split_hand_2_outcome')
            gui.set_enabled(node, true)
            gui.set_text(node, message.text)
        end
    elseif message_id == hash('disable_split_outcomes') then
        local node1 = gui.get_node('split_hand_1_outcome')
        local node2 = gui.get_node('split_hand_2_outcome')
        gui.set_enabled(node1, false)
        gui.set_enabled(node2, false)
    elseif message_id == hash('enable_split_counts') then
        local node = gui.get_node('player_count')
        gui.set_enabled(node, false)
        local hand_1 = gui.get_node('split_hand_1_count')
        local hand_2 = gui.get_node('split_hand_2_count')
        gui.set_text(hand_1, message.hand_1_count)
        gui.set_text(hand_2, message.hand_2_count)
        gui.set_enabled(hand_1, true)
        gui.set_enabled(hand_2, true)
    elseif message_id == hash('set_split_counts') then
        local hand_1 = gui.get_node('split_hand_1_count')
        local hand_2 = gui.get_node('split_hand_2_count')
        if message.hand_1_ace_count == 0 or message.hand_1_count == 21 then
            gui.set_text(hand_1, message.hand_1_count)
        else
            gui.set_text(hand_1, message.hand_1_ace_count .. '/' .. message.hand_1_count)
        end
        if message.hand_2_ace_count == 0 or message.hand_2_count == 21 then
            gui.set_text(hand_2, message.hand_2_count)
        else
            gui.set_text(hand_2, message.hand_2_ace_count .. '/' .. message.hand_2_count)
        end
    elseif message_id == hash('disable_split_counts') then
        local hand_1 = gui.get_node('split_hand_1_count')
        local hand_2 = gui.get_node('split_hand_2_count')
        gui.set_enabled(hand_1, false)
        gui.set_enabled(hand_2, false)
    elseif message_id == hash('set_player_count') then
        local node = gui.get_node('player_count')
        if message.ace_count == 0 or message.count == 21 then
            gui.set_text(node, ''..message.count)
        else
            gui.set_text(node, ''..message.ace_count..'/'..message.count)
        end
    elseif message_id == hash('set_dealer_count') then
        local node = gui.get_node('dealer_count')
        gui.set_text(node, ''..message.count)
    elseif message_id == hash('disable_count') then
        local dealer = gui.get_node('dealer_count')
        local player = gui.get_node('player_count')
        gui.set_enabled(dealer, false)
        gui.set_enabled(player, false)
    elseif message_id == hash('enable_count') then
        local dealer = gui.get_node('dealer_count')
        local player = gui.get_node('player_count')
        gui.set_enabled(dealer, true)
        gui.set_enabled(player, true)
    elseif message_id == hash('set_balance') then
        local node = gui.get_node('balance_text')
        gui.set_text(node, '$'..message.balance)
    elseif message_id == hash('enable_draw') then
        local node = gui.get_node('draw')
        gui.set_enabled(node, true)
    elseif message_id == hash('disable_draw') then
        local node = gui.get_node('draw')
        gui.set_enabled(node, false)
    elseif message_id == hash('enable_insurance') then
        local node = gui.get_node('insurance')
        gui.set_enabled(node, true)
    elseif message_id == hash('disable_insurance') then
        local node = gui.get_node('insurance')
        gui.set_enabled(node, false)
    elseif message_id == hash('enable_bet_menu') then
        local node = gui.get_node('bet_menu')
        gui.set_enabled(node, true)
    elseif message_id == hash('disable_bet_menu') then
        local node = gui.get_node('bet_menu')
        gui.set_enabled(node, false)
    elseif message_id == hash('update_bet') then
        self.bet = message.bet
        gui.set_text(gui.get_node('bet_text'), 'bet: $' .. self.bet)
    elseif message_id == hash('borrow_money') then
        gui.set_enabled(gui.get_node('borrow_money'), true)
    end
end

function on_input(self, action_id, action)
    if action_id == hash("touch") and action.pressed then
        if gui.pick_node(gui.get_node("hit"), action.x, action.y) then
            msg.post('#main', 'hit')
        elseif gui.pick_node(gui.get_node("stand"), action.x, action.y) then
            msg.post('#main', 'stand')
        elseif gui.pick_node(gui.get_node("double"), action.x, action.y) then
            msg.post('#main', 'double')
        elseif gui.pick_node(gui.get_node("split"), action.x, action.y) then
            msg.post('#main', 'split')
        elseif gui.pick_node(gui.get_node("draw"), action.x, action.y) and gui.is_enabled(gui.get_node('draw')) then
            msg.post('#main', 'draw')
        elseif gui.pick_node(gui.get_node("yes"), action.x, action.y) then
            if gui.is_enabled(gui.get_node("insurance")) then
                msg.post('#main', 'yes_insurance')
            end
        elseif gui.pick_node(gui.get_node("no"), action.x, action.y) then
            if gui.is_enabled(gui.get_node("insurance")) then
                msg.post('#main', 'no_insurance')
            end
        elseif gui.pick_node(gui.get_node("bet"), action.x, action.y) then
            msg.post('#main', 'add_bet', {bet = self.bet + self.chip_selected})
        elseif gui.pick_node(gui.get_node("chip_selector"), action.x, action.y) then
            msg.post('#main', 'bet_menu')
            local node = gui.get_node('bet_menu')
            if gui.is_enabled(node) then
                gui.set_enabled(node, false)
            else
                gui.set_enabled(node, true)
            end
        elseif gui.is_enabled(gui.get_node('bet_menu')) then
            if gui.pick_node(gui.get_node('clear'), action.x, action.y) then
                self.bet = 0
                msg.post('main:/home#main', 'touch')
                msg.post('#main', 'add_bet', {bet = 1})
            elseif gui.pick_node(gui.get_node('chip_1'), action.x, action.y) then
                self.chip_selected = 1
                msg.post('#main', 'bet_menu')
            elseif gui.pick_node(gui.get_node('chip_5'), action.x, action.y) then
                self.chip_selected = 5
                msg.post('#main', 'bet_menu')
            elseif gui.pick_node(gui.get_node('chip_10'), action.x, action.y) then
                self.chip_selected = 10
                msg.post('#main', 'bet_menu')
            elseif gui.pick_node(gui.get_node('chip_25'), action.x, action.y) then
                self.chip_selected = 25
                msg.post('#main', 'bet_menu')
            elseif gui.pick_node(gui.get_node('chip_100'), action.x, action.y) then
                self.chip_selected = 100
                msg.post('#main', 'bet_menu')
            elseif gui.pick_node(gui.get_node('chip_250'), action.x, action.y) then
                self.chip_selected = 250
                msg.post('#main', 'bet_menu')
            elseif gui.pick_node(gui.get_node('chip_1000'), action.x, action.y) then
                self.chip_selected = 1000
                msg.post('#main', 'bet_menu')
            elseif gui.pick_node(gui.get_node('chip_2500'), action.x, action.y) then
                self.chip_selected = 2500
                msg.post('#main', 'bet_menu')
            end
        elseif gui.pick_node(gui.get_node("back_button"), action.x, action.y) then
            msg.post('#main', 'back')
        elseif gui.pick_node(gui.get_node('of_course'), action.x, action.y) then
            gui.set_enabled(gui.get_node('borrow_money'), false)
            msg.post('#main', 'borrow_money')
        end
    end
end